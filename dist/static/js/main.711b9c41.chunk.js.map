{"version":3,"sources":["components/layout/SignInLinks.js","store/actions/authActions.js","components/layout/SignOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initial","SignOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","src","image","alt","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authId","add","authorId","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projecReducer","rootreducer","combineReducers","projectReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","middleware","thunk","withExtraArgument","store","createStore","rootReducer","applyMiddleware","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.711b9c41.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {signOut} from '../../store/actions/authActions'\n\nconst SignInLinks = (props) => {\n    \n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/createproject\">New Post</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initial}</NavLink></li>\n        </ul>\n        )\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n        signOut:() => dispatch(signOut())\n    }\n}\n\nexport default connect( null, mapDispatchToProps)(SignInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=> {\n            dispatch({type:'LOGIN_SUCESS'});\n        }).catch((err)=>{\n            dispatch({type:'LOGIN_ERROR', err});\n        })\n    }\n}\n\n\n\nexport const signOut = () => {\n    return(dispatch, getState, {getFirebase})=>{\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(()=>{\n            dispatch({type:'SIGNOUT_SUCESS'})\n        })\n\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initial: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCESS'})\n        }).catch(err => {\n            dispatch({type:'SIGNUP_ERROR', err})\n        })\n    }\n}\n\n\n\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst SignOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">SignUp</NavLink></li>\n            <li><NavLink to=\"/signin\">LogIn</NavLink></li>\n        </ul>\n        )\n}\n\nexport default SignOutLinks;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport SignInLinks from './SignInLinks'\nimport SignOutLinks from './SignOutLinks'\nimport {connect} from 'react-redux'\n\nconst Navbar = (props) => {\n    const {auth, profile} = props;\n    const links = auth.uid ? <SignInLinks profile={profile}/> : <SignOutLinks />\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n        <div className='container'>\n            <Link to='/' className=\"brand-logo\">Social Board</Link>\n            {links}\n        </div>\n    </nav> \n        )\n}\n\nconst mapStateToProps=(state)=>{\n    console.log(state)\n    return{\n        auth:state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\nimport moment from \"moment\";\nconst Notifications = props => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span className=\"\">{item.content} </span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <div className=\"card-image\">\n          <img src={project.image} alt={project.title} />\n        </div>\n        <span className=\"card-title\">{project.title}</span>\n\n        <div className=\"card-action\">\n          <p>\n            Oposted by the {project.authorFirstName} {project.authorLastName}\n          </p>\n          <p className=\"grey-text\">\n            {moment(project.createdAt.toDate()).calendar()}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectList = ({projects}) =>{\n \n    \n    return (\n        \n        <div className=\"project-list section\">\n          { projects && projects.map((project) => {\n              return(\n                  <Link to={'/project/' + project.id} key={project.id}>\n                      <ProjectSummary project={project} />\n                  </Link>\n              )\n          })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props.projects)\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  //console.log(state)\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = props => {\n  const { project, auth } = props;\n\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <div className=\"card-image\">\n              <img\n                src={project.image}\n                alt=\"imageHead\"\n                className=\"materialboxed\"\n              />\n            </div>\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action gret lighten-4 grey-text\">\n            <div>\n              Posted By {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div> {moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state)\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {signIn} from '../../store/actions/authActions';\nimport {Redirect} from 'react-router-dom'\n\nclass SignIn extends Component {\n    state={\n        email:'',\n        password:''\n    }\n\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit =(e)=>{\n       e.preventDefault();\n       this.props.signIn(this.state)\n    }\n\n  render() {\n    const {authError, auth} = this.props;\n    if(auth.uid) return <Redirect to='/'/>\n\n    return (\n      <div className=\"container\"> \n        <form className=\"white\" onSubmit={this.handleSubmit}>\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>  \n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Login</button> \n                <div className=\"red-text center\">\n                  {authError ? <p>{authError}</p> : null}\n                  </div>   \n            </div> \n        </form> \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    authError:state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    signIn: (creds) =>dispatch(signIn(creds))\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport {connect} from'react-redux'\nimport {signUp} from '../../store/actions/authActions'\n\n\nclass SignUp extends Component {\n    state={\n        email:'',\n        password:'',\n        firstName:'',\n        lastName:''\n    }\n\n    handleChange =(e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit =(e)=>{\n       e.preventDefault();\n       this.props.signUp(this.state)\n    }\n\n  render() {\n    const { auth, authError} = this.props\n    if(auth.uid) return <Redirect to='/'/>\n    return (\n      <div className=\"container\"> \n        <form className=\"white\" onSubmit={this.handleSubmit}>\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>  \n            <div className=\"input-field\">\n                <label htmlFor=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n            </div> \n            <div className=\"input-field\">\n                <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button> \n                <div className=\"red-text center\">\n                    {authError ? <p>{authError}</p> : null}\n                    </div>   \n            </div> \n        </form> \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state)\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n  }\n\n  const mapDispatchToProps = (dispatch) => {\n      return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n      }\n  }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n"," const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        const authId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId: authId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type:'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n        })\n        \n    }\n}\n\nexport default createProject","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport createProject from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = {\n    title: \"\",\n    content: \"\",\n    image: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state)\n    this.props.createProject(this.state);\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create New Post</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <label>Image URL</label>\n            <textarea\n              type=\"text\"\n              id=\"image\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  //console.log(state)\n  return {\n    auth: state.firebase.auth\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\n\nclass App extends Component {\nrender(){\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component ={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails}/>\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp}/>\n          <Route path='/createproject' component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  \n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\n    authError: null\n}\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login failed');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCESS':\n            console.log('login sucess');\n            return{\n                ...state,\n                authError:null\n            }\n        case 'SIGNOUT_SUCESS':\n            console.log('signout sucess');\n            return state;\n        case 'SIGNUP_SUCESS':\n            console.log('signup sucess')\n            return {\n                ...state,\n                authError:null\n            }\n        case 'SIGNUP_ERROR':\n            console.log ('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer"," const initState = {\n        projects: [\n          {id: '1', title: 'help me find peach', content: 'blah blah blah',image:'https://images.pexels.com/photos/2703519/pexels-photo-2703519.jpeg'},\n          {id: '2', title: 'collect all the stars', content: 'blah blah blah',image:'https://images.pexels.com/photos/2892253/pexels-photo-2892253.jpeg'},\n          {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah',image:'https://images.pexels.com/photos/1081912/pexels-photo-1081912.jpeg'}        ]\n      }\n\n\nconst projecReducer = (state = initState, action) => {\n    switch(action.type){\n      case 'CREATE_PROJECT':\n        console.log('created project', action.project)\n        return state;\n      case 'CREATE_PROJECT_ERROR':\n        console.log('create project error', action.err)\n        return state;\n      default:\n        return state\n    }\n}\n\nexport default projecReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {combineReducers} from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\nconst rootreducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootreducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar config = {\n    apiKey: \"AIzaSyBDTFVfuI6LUWnn5BvK_11Y6lcOKUOuRKk\",\n    authDomain: \"socialboard-5befd.firebaseapp.com\",\n    databaseURL: \"https://socialboard-5befd.firebaseio.com\",\n    projectId: \"socialboard-5befd\",\n    storageBucket: \"socialboard-5befd.appspot.com\",\n    messagingSenderId: \"870361707174\",\n    appId: \"1:870361707174:web:8006b4009516688a8b7a67\",\n    measurementId: \"G-5V6Z74D2DJ\"\n  };\n\n  firebase.initializeApp(config);\n  firebase.firestore();\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst middleware = [thunk.withExtraArgument({ getFirebase, getFirestore})]\n\nconst store = createStore(\n    rootReducer, \n    compose(\n     applyMiddleware(...middleware),\n     reduxFirestore(fbConfig),\n     reactReduxFirebase(fbConfig, {useFirestoreForProfile:true, userProfile:'users',attachAuthIsReady:true})\n     )\n    );\n\n    store.firebaseAuthIsReady.then(() => {\n        ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>, document.getElementById('root'));\n           \n        \n        // If you want your app to work offline and load faster, you can change\n        // unregister() to register() below. Note this comes with some pitfalls.\n        // Learn more about service workers: https://bit.ly/CRA-PWA\n        serviceWorker.unregister();\n    })\n\n\n"],"sourceRoot":""}